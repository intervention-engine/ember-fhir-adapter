// Generated by CoffeeScript 1.9.3
import Em from 'ember';
import DS from 'ember-data';
var Condition;

Condition = DS.Model.extend({
  identifier: DS.hasMany('identifier'),
  subject: DS.belongsTo('resource-reference'),
  encounter: DS.belongsTo('resource-reference'),
  asserter: DS.belongsTo('resource-reference'),
  dateAsserted: DS.attr('date'),
  code: DS.belongsTo('codeable-concept'),
  category: DS.belongsTo('codeable-concept'),
  status: DS.attr('string'),
  certainty: DS.belongsTo('codeable-concept'),
  severity: DS.belongsTo('codeable-concept'),
  onsetDate: DS.attr('date'),
  abatementDate: DS.attr('date'),
  abatementBoolean: DS.attr('boolean'),
  location: DS.hasMany('location'),
  notes: DS.attr('string'),
  text: (function() {
    var ref, ref1;
    return ((ref = this.get('code.text')) != null ? (ref1 = ref.match(/:\s+([^(]+)\s+\(/)) != null ? ref1[1] : void 0 : void 0) || this.get('code.text');
  }).property('code'),
  startDate: Em.computed('onsetDate', function() {
    return this.get('onsetDate');
  }),
  endDate: Em.computed('abatementDate', function() {
    return this.get('abatementDate');
  }),
  active: (function() {
    return (this.get('abatementDate') == null) || (this.get('abatementDate') > new Date());
  }).property('abatementDate')
});

export default Condition;
